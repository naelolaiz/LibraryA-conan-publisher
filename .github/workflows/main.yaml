name: CMake

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
#  create:
#    tags:
#      - '*'
    
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release, Debug]

    steps:
    - uses: actions/checkout@v2
    
    - name: Display platform information on python
      run: |
        import platform
        print(platform.uname())
        print("${{ github.ref }}")
      shell: python
        
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{github.workspace}}/LibraryA

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

    - name: Package
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }} --target package
      
    - name: Strip repository name
      id: strip_repo_name
      uses: ashley-taylor/regex-property-action@1.2
      with:
        value: ${{ github.repository }}
        regex: ".*/"
        flags: "" # Optional, defaults to "g"
        replacement: ""
    - name: Create multiplatform artifact for github
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.strip_repo_name.outputs.value }}-${{ github.ref_name  }}-multiplatform-${{ github.sha }}
        path: ${{github.workspace}}/build/LibraryA-*
    - name: Create per-platform artifacts for github
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.strip_repo_name.outputs.value }}-${{ github.ref_name }}-${{ matrix.os }}-${{ github.sha }}
        path: ${{github.workspace}}/build/LibraryA-*

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/build/LibraryA-*
        
    - uses: jfrog/setup-jfrog-cli@v2
      env:
        JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
    - name: Artifactory generic
      if: "!startsWith(github.ref, 'refs/tags/')"
      working-directory: ${{github.workspace}}/build
      run: |
        jf rt ping
        jf rt u "LibraryA-*" ${{ secrets.JF_GENERIC_REPO_NAME }}/artifacts/${{ github.job }}/${{ github.sha }}/
      
    - name: Install Conan
      if: "!startsWith(github.ref, 'refs/tags/')"
      id: conan
      uses: turtlebrowser/get-conan@main      

    - name: Conan
      if: "!startsWith(github.ref, 'refs/tags/')"
      working-directory: ${{github.workspace}}/LibraryA
      run: |
        conan new LibraryA/${{ github.sha }} -t -s
        conan install -s build_type=${{ matrix.build_type }} .
        conan create -s build_type=${{ matrix.build_type }} . demo/testing
        conan remote add my-conan-repo ${{ secrets.JF_SECRET_CONAN_REPO_URL }}
        conan user -p ${{ secrets.JF_SECRET_CONAN_API_KEY }} -r my-conan-repo ${{ secrets.JF_SECRET_CONAN_USER }}
        conan upload -r my-conan-repo --all --no-overwrite recipe LibraryA/${{ github.sha }}@demo/testing

    - name: Test
      working-directory: ${{github.workspace}}/build/test_package
      run: ctest -VV -C ${{ matrix.build_type }}
